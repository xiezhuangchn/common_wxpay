<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hnair.pay.db.dao.mapper.WithdrawOrderMapper" >
  <resultMap id="BaseResultMap" type="com.hnair.pay.db.entity.WithdrawOrder" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="withdraw_order_no" property="withdrawOrderNo" jdbcType="VARCHAR" />
    <result column="withdraw_trade_no" property="withdrawTradeNo" jdbcType="VARCHAR" />
    <result column="marketing_person_id" property="marketingPersonId" jdbcType="VARCHAR" />
    <result column="withdraw_fee" property="withdrawFee" jdbcType="INTEGER" />
    <result column="fee_type" property="feeType" jdbcType="VARCHAR" />
    <result column="bus_channel" property="busChannel" jdbcType="VARCHAR" />
    <result column="pay_channel_type" property="payChannelType" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, withdraw_order_no, withdraw_trade_no, marketing_person_id, withdraw_fee, fee_type, 
    bus_channel, pay_channel_type, `status`, update_time, create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hnair.pay.db.entity.WithdrawOrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from withdraw_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from withdraw_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from withdraw_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hnair.pay.db.entity.WithdrawOrderExample" >
    delete from withdraw_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hnair.pay.db.entity.WithdrawOrder" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into withdraw_order (withdraw_order_no, withdraw_trade_no, 
      marketing_person_id, withdraw_fee, fee_type, 
      bus_channel, pay_channel_type, `status`, 
      update_time, create_time)
    values (#{withdrawOrderNo,jdbcType=VARCHAR}, #{withdrawTradeNo,jdbcType=VARCHAR}, 
      #{marketingPersonId,jdbcType=VARCHAR}, #{withdrawFee,jdbcType=INTEGER}, #{feeType,jdbcType=VARCHAR}, 
      #{busChannel,jdbcType=VARCHAR}, #{payChannelType,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.hnair.pay.db.entity.WithdrawOrder" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into withdraw_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="withdrawOrderNo != null" >
        withdraw_order_no,
      </if>
      <if test="withdrawTradeNo != null" >
        withdraw_trade_no,
      </if>
      <if test="marketingPersonId != null" >
        marketing_person_id,
      </if>
      <if test="withdrawFee != null" >
        withdraw_fee,
      </if>
      <if test="feeType != null" >
        fee_type,
      </if>
      <if test="busChannel != null" >
        bus_channel,
      </if>
      <if test="payChannelType != null" >
        pay_channel_type,
      </if>
      <if test="status != null" >
        `status`,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="withdrawOrderNo != null" >
        #{withdrawOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="withdrawTradeNo != null" >
        #{withdrawTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="marketingPersonId != null" >
        #{marketingPersonId,jdbcType=VARCHAR},
      </if>
      <if test="withdrawFee != null" >
        #{withdrawFee,jdbcType=INTEGER},
      </if>
      <if test="feeType != null" >
        #{feeType,jdbcType=VARCHAR},
      </if>
      <if test="busChannel != null" >
        #{busChannel,jdbcType=VARCHAR},
      </if>
      <if test="payChannelType != null" >
        #{payChannelType,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hnair.pay.db.entity.WithdrawOrderExample" resultType="java.lang.Integer" >
    select count(*) from withdraw_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update withdraw_order
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.withdrawOrderNo != null" >
        withdraw_order_no = #{record.withdrawOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.withdrawTradeNo != null" >
        withdraw_trade_no = #{record.withdrawTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.marketingPersonId != null" >
        marketing_person_id = #{record.marketingPersonId,jdbcType=VARCHAR},
      </if>
      <if test="record.withdrawFee != null" >
        withdraw_fee = #{record.withdrawFee,jdbcType=INTEGER},
      </if>
      <if test="record.feeType != null" >
        fee_type = #{record.feeType,jdbcType=VARCHAR},
      </if>
      <if test="record.busChannel != null" >
        bus_channel = #{record.busChannel,jdbcType=VARCHAR},
      </if>
      <if test="record.payChannelType != null" >
        pay_channel_type = #{record.payChannelType,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        `status` = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update withdraw_order
    set id = #{record.id,jdbcType=BIGINT},
      withdraw_order_no = #{record.withdrawOrderNo,jdbcType=VARCHAR},
      withdraw_trade_no = #{record.withdrawTradeNo,jdbcType=VARCHAR},
      marketing_person_id = #{record.marketingPersonId,jdbcType=VARCHAR},
      withdraw_fee = #{record.withdrawFee,jdbcType=INTEGER},
      fee_type = #{record.feeType,jdbcType=VARCHAR},
      bus_channel = #{record.busChannel,jdbcType=VARCHAR},
      pay_channel_type = #{record.payChannelType,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=TINYINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hnair.pay.db.entity.WithdrawOrder" >
    update withdraw_order
    <set >
      <if test="withdrawOrderNo != null" >
        withdraw_order_no = #{withdrawOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="withdrawTradeNo != null" >
        withdraw_trade_no = #{withdrawTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="marketingPersonId != null" >
        marketing_person_id = #{marketingPersonId,jdbcType=VARCHAR},
      </if>
      <if test="withdrawFee != null" >
        withdraw_fee = #{withdrawFee,jdbcType=INTEGER},
      </if>
      <if test="feeType != null" >
        fee_type = #{feeType,jdbcType=VARCHAR},
      </if>
      <if test="busChannel != null" >
        bus_channel = #{busChannel,jdbcType=VARCHAR},
      </if>
      <if test="payChannelType != null" >
        pay_channel_type = #{payChannelType,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hnair.pay.db.entity.WithdrawOrder" >
    update withdraw_order
    set withdraw_order_no = #{withdrawOrderNo,jdbcType=VARCHAR},
      withdraw_trade_no = #{withdrawTradeNo,jdbcType=VARCHAR},
      marketing_person_id = #{marketingPersonId,jdbcType=VARCHAR},
      withdraw_fee = #{withdrawFee,jdbcType=INTEGER},
      fee_type = #{feeType,jdbcType=VARCHAR},
      bus_channel = #{busChannel,jdbcType=VARCHAR},
      pay_channel_type = #{payChannelType,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=TINYINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>