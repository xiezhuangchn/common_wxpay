<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hnair.pay.db.dao.mapper.PayOrderLogMapper" >
  <resultMap id="BaseResultMap" type="com.hnair.pay.db.entity.PayOrderLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="pay_order_no" property="payOrderNo" jdbcType="INTEGER" />
    <result column="refund_order_no" property="refundOrderNo" jdbcType="INTEGER" />
    <result column="bus_type" property="busType" jdbcType="VARCHAR" />
    <result column="bus_order_no" property="busOrderNo" jdbcType="VARCHAR" />
    <result column="context" property="context" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, pay_order_no, refund_order_no, bus_type, bus_order_no, context, create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hnair.pay.db.entity.PayOrderLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from pay_order_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from pay_order_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from pay_order_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hnair.pay.db.entity.PayOrderLogExample" >
    delete from pay_order_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hnair.pay.db.entity.PayOrderLog" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pay_order_log (pay_order_no, refund_order_no, bus_type, 
      bus_order_no, context, create_time
      )
    values (#{payOrderNo,jdbcType=INTEGER}, #{refundOrderNo,jdbcType=INTEGER}, #{busType,jdbcType=VARCHAR}, 
      #{busOrderNo,jdbcType=VARCHAR}, #{context,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hnair.pay.db.entity.PayOrderLog" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pay_order_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="payOrderNo != null" >
        pay_order_no,
      </if>
      <if test="refundOrderNo != null" >
        refund_order_no,
      </if>
      <if test="busType != null" >
        bus_type,
      </if>
      <if test="busOrderNo != null" >
        bus_order_no,
      </if>
      <if test="context != null" >
        context,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="payOrderNo != null" >
        #{payOrderNo,jdbcType=INTEGER},
      </if>
      <if test="refundOrderNo != null" >
        #{refundOrderNo,jdbcType=INTEGER},
      </if>
      <if test="busType != null" >
        #{busType,jdbcType=VARCHAR},
      </if>
      <if test="busOrderNo != null" >
        #{busOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="context != null" >
        #{context,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hnair.pay.db.entity.PayOrderLogExample" resultType="java.lang.Integer" >
    select count(*) from pay_order_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update pay_order_log
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.payOrderNo != null" >
        pay_order_no = #{record.payOrderNo,jdbcType=INTEGER},
      </if>
      <if test="record.refundOrderNo != null" >
        refund_order_no = #{record.refundOrderNo,jdbcType=INTEGER},
      </if>
      <if test="record.busType != null" >
        bus_type = #{record.busType,jdbcType=VARCHAR},
      </if>
      <if test="record.busOrderNo != null" >
        bus_order_no = #{record.busOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.context != null" >
        context = #{record.context,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update pay_order_log
    set id = #{record.id,jdbcType=INTEGER},
      pay_order_no = #{record.payOrderNo,jdbcType=INTEGER},
      refund_order_no = #{record.refundOrderNo,jdbcType=INTEGER},
      bus_type = #{record.busType,jdbcType=VARCHAR},
      bus_order_no = #{record.busOrderNo,jdbcType=VARCHAR},
      context = #{record.context,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hnair.pay.db.entity.PayOrderLog" >
    update pay_order_log
    <set >
      <if test="payOrderNo != null" >
        pay_order_no = #{payOrderNo,jdbcType=INTEGER},
      </if>
      <if test="refundOrderNo != null" >
        refund_order_no = #{refundOrderNo,jdbcType=INTEGER},
      </if>
      <if test="busType != null" >
        bus_type = #{busType,jdbcType=VARCHAR},
      </if>
      <if test="busOrderNo != null" >
        bus_order_no = #{busOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="context != null" >
        context = #{context,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hnair.pay.db.entity.PayOrderLog" >
    update pay_order_log
    set pay_order_no = #{payOrderNo,jdbcType=INTEGER},
      refund_order_no = #{refundOrderNo,jdbcType=INTEGER},
      bus_type = #{busType,jdbcType=VARCHAR},
      bus_order_no = #{busOrderNo,jdbcType=VARCHAR},
      context = #{context,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>